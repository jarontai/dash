// These code was generated by ast_gen, please don't modify directly.

import '../scanning/token.dart';

// The ast expressions.

abstract class Expression {
  R acceptExpression<R>(ExpressionVisitor<R> visitor);
}

class BinaryExpression extends Expression {
  final Expression left;
  final Token op;
  final Expression right;
  BinaryExpression(this.left, this.op, this.right);

  R acceptExpression<R>(ExpressionVisitor<R> visitor) {
    return visitor.visitBinaryExpression(this);
  }
}

class GroupingExpression extends Expression {
  final Expression expression;
  GroupingExpression(this.expression);

  R acceptExpression<R>(ExpressionVisitor<R> visitor) {
    return visitor.visitGroupingExpression(this);
  }
}

class LiteralExpression extends Expression {
  final Object value;
  LiteralExpression(this.value);

  R acceptExpression<R>(ExpressionVisitor<R> visitor) {
    return visitor.visitLiteralExpression(this);
  }
}

class UnaryExpression extends Expression {
  final Token op;
  final Expression right;
  UnaryExpression(this.op, this.right);

  R acceptExpression<R>(ExpressionVisitor<R> visitor) {
    return visitor.visitUnaryExpression(this);
  }
}

abstract class ExpressionVisitor<R> {
  R visitBinaryExpression(BinaryExpression expression);
  R visitGroupingExpression(GroupingExpression expression);
  R visitLiteralExpression(LiteralExpression expression);
  R visitUnaryExpression(UnaryExpression expression);
}

abstract class Statement {
  R acceptStatement<R>(StatementVisitor<R> visitor);
}

class ExpressionStatement extends Statement {
  final Expression expression;
  ExpressionStatement(this.expression);

  R acceptStatement<R>(StatementVisitor<R> visitor) {
    return visitor.visitExpressionStatement(this);
  }
}

abstract class StatementVisitor<R> {
  R visitExpressionStatement(ExpressionStatement statement);
}
